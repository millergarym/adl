name: rust release

on:
  push:
    tags:
      - rust/compiler/v[0-9]*

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest]

    steps:
      - uses: actions/checkout@v3
        # Fetch all history so git describe works
      - run: |
          git fetch --prune --unshallow

      # When rustup is updated, it tries to replace its binary, which on Windows is somehow locked.
      # This can result in the CI failure, see: https://github.com/rust-lang/rustup/issues/3029
      - run: |
          rustup set auto-self-update disable
          rustup toolchain install nightly --profile minimal

      - uses: Swatinem/rust-cache@v2

      - run: cargo +nightly build --release

      - uses: actions/upload-artifact@v3
        with:
          name: radlc-${{ runner.os }}
          path: target/release/radlc

  release:
    name: Create Github Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:

    - name: Determine version
      id: version
      run:
        echo "version=${GITHUB_REF:24}" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
     
    - name: Fetch macOS build
      uses: actions/download-artifact@v1
      with:
        name: radlc-macOS
        path: radlc-macOS

    - name: Fetch linux build
      uses: actions/download-artifact@v1
      with:
        name: radlc-linux
        path: radlc-linux

    - name: Upload macOS build
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: radlc-macOS/radlc
        asset_name: radlc-${{ steps.version.outputs.version }}-osx
        asset_content_type: application/octet-stream

    - name: Upload linux build
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: radlc-linux/radlc
        asset_name: radlc-${{ steps.version.outputs.version }}-linux
        asset_content_type: application/octet-stream
